[build-system]
requires = ["setuptools>=68.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "commonpython"
version = "2.0.0"
description = "A flexible Python framework with adapter pattern for IBM DB2 and MQ integration"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
dynamic = []
authors = [
    {name = "CommonPython Framework Team", email = "team@commonpython.com"}
]
maintainers = [
    {name = "CommonPython Framework Team", email = "team@commonpython.com"}
]
keywords = [
    "framework",
    "ibm",
    "db2",
    "mq",
    "database",
    "messaging",
    "adapter-pattern",
    "configuration",
    "logging"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Topic :: System :: Networking",
]

# Mandatory dependencies (always required)
dependencies = [
    "PyYAML>=6.0",
]

[project.optional-dependencies]
# Testing (unittest only - no third-party test frameworks)
test = [
    "coverage>=7.0.0",
]

# Development tools (optional)
dev = [
    "coverage>=7.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "types-PyYAML>=6.0.0",
]

# Library-based implementations (high performance)
library = [
    "ibm_db>=3.0.0",
    "pymqi>=1.12.0",
]

# Database library support only
db-library = [
    "ibm_db>=3.0.0",
]

# Messaging library support only
mq-library = [
    "pymqi>=1.12.0",
]

# All optional dependencies
all = [
    "coverage>=7.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "types-PyYAML>=6.0.0",
    "ibm_db>=3.0.0",
    "pymqi>=1.12.0",
]

[project.urls]
Homepage = "https://github.com/psanodiya94/commonpython"
Documentation = "https://github.com/psanodiya94/commonpython#readme"
Repository = "https://github.com/psanodiya94/commonpython"
Issues = "https://github.com/psanodiya94/commonpython/issues"
Changelog = "https://github.com/psanodiya94/commonpython/blob/main/CHANGELOG.md"

[project.scripts]
commonpython = "commonpython.cli.cli:main"

[tool.setuptools]
packages = { find = { where = ["."], exclude = ["test*", "scripts*", "docs*", "examples*"] } }

[tool.setuptools.package-data]
commonpython = ["config/*.yaml", "config/*.json"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Ruff configuration (replaces flake8, isort, and more)
[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py
"test/**/*.py" = ["B017"]  # allow assertRaises(Exception) in tests

[tool.ruff.lint.isort]
known-first-party = ["commonpython"]

# Mypy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_calls = false
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
show_error_codes = true
show_column_numbers = true
pretty = true

[[tool.mypy.overrides]]
module = "ibm_db.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pymqi.*"
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
branch = true
source = ["commonpython"]
omit = [
    "*/test/*",
    "*/tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
